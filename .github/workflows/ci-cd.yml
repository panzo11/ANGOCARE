name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: angocare
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Install PHP dependencies
      run: composer install

    - name: Create .env file
      run: |
        cp .env.example .env
        php artisan key:generate

    - name: Run PHP tests
      run: php artisan test

    - name: Build Docker image
      run: docker build -t angocare:latest .

    - name: Push Docker image to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        docker tag angocare:latest $DOCKER_USERNAME/angocare:latest
        docker push $DOCKER_USERNAME/angocare:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to Docker Swarm
      run: |
        docker stack deploy -c docker-compose.yml angocare
