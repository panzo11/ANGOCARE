name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: angocare
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Install PHP dependencies
      run: composer install

    - name: Create .env file
      run: |
        echo "APP_NAME=Laravel" > .env
        echo "APP_ENV=local" >> .env
        echo "APP_KEY=" >> .env
        echo "APP_DEBUG=true" >> .env
        echo "APP_URL=http://localhost" >> .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=angocare" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=root" >> .env
        php artisan key:generate

    - name: Run migrations
      run: php artisan migrate

    - name: Run PHP tests
      run: php artisan test

    - name: Build Docker image
      run: docker build -t angocare:latest .

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Configure Git
      run: |
        git config --global user.email "panzopedro26@gmail.com"
        git config --global user.name "panzo11"

    - name: Create and push tag
      uses: phish108/autotag-action@v1.1.55
      with:
        github-token: ${{ secrets.MY_GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Initialize Docker Swarm
      run: docker swarm init || docker swarm join --token SWMTKN-1-4ib0mp3wa4i87mlxx0706m5t4afi3bedfl0sc5p7n4yvr1xepx-3wp8rmj58f5lfnk1i0iexe4n5 192.168.221.88:2377

    - name: Deploy to Docker Swarm
      run: |
        docker stack deploy --compose-file docker-compose.yml angocare --with-registry-auth
